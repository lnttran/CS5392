-- Drop all tables with CASCADE to remove foreign key constraints
DROP TABLE IF EXISTS ATTACHMENTS CASCADE;
DROP TABLE IF EXISTS ATTACHMENT_TEMPLATES CASCADE;
DROP TABLE IF EXISTS SIGNATURES CASCADE;
DROP TABLE IF EXISTS SIGNATURE_TEMPLATES CASCADE;
DROP TABLE IF EXISTS FORM_CONTENT CASCADE;
DROP TABLE IF EXISTS FORM_CONTENT_TEMPLATES CASCADE;
DROP TABLE IF EXISTS FORMS CASCADE;
DROP TABLE IF EXISTS FORM_TEMPLATES CASCADE;
DROP TABLE IF EXISTS CREDENTIALS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS USER_TITLES CASCADE;
-- Drop custom ENUM types
DROP TYPE IF EXISTS form_status CASCADE;
DROP TYPE IF EXISTS value_type CASCADE;
DROP TYPE IF EXISTS file_type CASCADE;
CREATE TYPE form_status AS ENUM (
    'DRAFT',
    'SUBMITTED',
    'APPROVED',
    'REJECTED',
    'INACTIVE',
    'ACTIVE'
);
CREATE TYPE value_type AS ENUM ('NUMBER', 'TEXT', 'BOOLEAN', 'DATE');
CREATE TYPE file_type AS ENUM ('PDF', 'DOC', 'JPG', 'PNG');
-- Create base tables (no foreign keys yet)
CREATE TABLE IF NOT EXISTS user_titles (
    title_id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL
);
CREATE TABLE IF NOT EXISTS users (
    username VARCHAR PRIMARY KEY,
    title_id INT NOT NULL,
    firstname VARCHAR NOT NULL,
    lastname VARCHAR NOT NULL,
    level INT,
    email VARCHAR UNIQUE NOT NULL
);
CREATE TABLE IF NOT EXISTS credentials (
    username VARCHAR PRIMARY KEY,
    password VARCHAR,
    login_first_time BOOLEAN DEFAULT TRUE
);
CREATE TABLE IF NOT EXISTS form_templates (
    formtypeid VARCHAR PRIMARY KEY,
    status form_status DEFAULT 'DRAFT',
    title VARCHAR NOT NULL,
    description TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS forms (
    formid VARCHAR PRIMARY KEY,
    formtypeid VARCHAR NOT NULL,
    username VARCHAR NOT NULL,
    status form_status DEFAULT 'DRAFT',
    created_date DATE NOT NULL,
    last_updated DATE NOT NULL
);
CREATE TABLE IF NOT EXISTS form_content_templates (
    content_template_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formtypeid VARCHAR NOT NULL,
    field_name VARCHAR NOT NULL,
    is_value_needed BOOLEAN NOT NULL,
    value_type value_type,
    description TEXT
);
CREATE TABLE IF NOT EXISTS form_content (
    content_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formid VARCHAR,
    field_value VARCHAR,
    content_template_id INT
);
CREATE TABLE IF NOT EXISTS signature_templates (
    signature_template_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formtypeid VARCHAR NOT NULL,
    title_id INT
);
CREATE TABLE IF NOT EXISTS signatures (
    signatureid INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    signature_template_id INT,
    formid VARCHAR NOT NULL,
    username VARCHAR NOT NULL,
    signature VARCHAR,
    decided_on DATE,
    status form_status,
    rejection_reason TEXT,
    title_id INT
);
CREATE TABLE IF NOT EXISTS attachment_templates (
    attachment_template_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formtypeid VARCHAR NOT NULL,
    file_type file_type
);
CREATE TABLE IF NOT EXISTS attachments (
    attachmentid INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    formid VARCHAR NOT NULL,
    file_path VARCHAR NOT NULL,
    attatchment_template_id INT
);
-- Add foreign key constraints after all tables are created
ALTER TABLE users
ADD FOREIGN KEY (title_id) REFERENCES user_titles (title_id);
ALTER TABLE credentials
ADD FOREIGN KEY (username) REFERENCES users (username);
ALTER TABLE forms
ADD FOREIGN KEY (formtypeid) REFERENCES form_templates (formtypeid),
    ADD FOREIGN KEY (username) REFERENCES users (username);
ALTER TABLE form_content
ADD FOREIGN KEY (formid) REFERENCES forms (formid),
    ADD FOREIGN KEY (content_template_id) REFERENCES form_content_templates (content_template_id);
ALTER TABLE form_content_templates
ADD FOREIGN KEY (formtypeid) REFERENCES form_templates (formtypeid);
ALTER TABLE signature_templates
ADD FOREIGN KEY (formtypeid) REFERENCES form_templates (formtypeid),
    ADD FOREIGN KEY (title_id) REFERENCES user_titles (title_id);
ALTER TABLE signatures
ADD FOREIGN KEY (formid) REFERENCES forms (formid),
    ADD FOREIGN KEY (username) REFERENCES users (username),
    ADD FOREIGN KEY (signature_template_id) REFERENCES signature_templates (signature_template_id);
ALTER TABLE attachments
ADD FOREIGN KEY (formid) REFERENCES forms (formid),
    ADD FOREIGN KEY (attatchment_template_id) REFERENCES attachment_templates (attachment_template_id);
ALTER TABLE attachment_templates
ADD FOREIGN KEY (formtypeid) REFERENCES form_templates (formtypeid);